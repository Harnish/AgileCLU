#!/usr/bin/env python
# coding: utf-8
#
# Copyright (C) 2010-2011, Wylie Swanson
#
# This Program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License V3, as published by
# the Free Software Foundation.
#
# This Program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.

from AgileCLU import AgileCLU
import sys, os.path, string
from optparse import OptionParser, OptionGroup

#import subprocess
#from urlparse import urlparse

def main():

	# parse command line and associated helper

	parser = OptionParser( usage= "usage: %prog [options] inputpath", version="%prog 1.0")
	parser.add_option("-v", "--verbose", action="store_true", dest="verbose", help="be verbose", default=False)
        parser.add_option("-l", "--login", dest="username", help="use alternate credentials in /etc/lama/*.conf")

	(options, args) = parser.parse_args()
	if len(args) != 1: parser.error("wrong number of arguments")
	inputpath=args[0]

	if (inputpath=='/'):
		if options.verbose: print "Remote directory path (%s) root is not allowed.  Exiting." % inputpath
		sys.exit(1)

	if options.username: agile = AgileCLU( options.username ) 
	else: agile = AgileCLU()

	# check that destination path exists
	if (not agile.exists(inputpath)):
		if options.verbose: print "Remote directory path (%s) does not exist.  Exiting." % inputpath
		agile.logout()
		sys.exit(1)
	else:
		if options.verbose: print "Remote directory path (%s) exists, skipping." % inputpath
		outputpath = inputpath+'-output'

		if agile.exists(outputpath):
			if options.verbose: print "Remote output directory (%s) exists, skipping." % outputpath
		else:
			agile.mkdir( outputpath )
			if options.verbose: print "Remote output directory (%s) created." % outputpath

		dirs = [ 'iPhone', 'iPhone4', 'iPod', 'iPad', 'AppleTV', 'AppleTV2', 'Droid-Mid', 'Droid-High', 'High' ]
		for item in dirs:
			outputpathext = os.path.join( outputpath, item )
			lobj=string.lower(item)
			# if options.verbose: print "Remote output directory (%s) created for (%s)" outputpathext+' ('+lobj+')'
			if agile.exists(outputpathext):
				if options.verbose: print "Remote output directory (%s) exists, skipping." % outputpathext
			else:
				agile.mkdir( outputpathext )
				if options.verbose: print "Remote output directory (%s) created for %s." % (outputpathext, item)

	# logout, of course - kill the token
	agile.logout()

if __name__ == '__main__':
    main()
