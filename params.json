{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Agileclu","body":"AgileCLU\r\n========\r\nAgileCLU is a command line tool implementation and Python programming library for Limelight Networks Agile Storage cloud platform.  It leverages Agile's JSON-RPC APIs and HTTP ingest and egress capabilities in an easy to use way.  \r\n\r\nCommunication\r\n-------------\r\nFeel free to send any questions, comments, or patches to my Github page (you'll need to join to send a message): \r\nhttps://github.com/wylieswanson/AgileCLU\r\n\r\nBasic Installation\r\n------------------\r\nIf you already have Python and [Python Package Index](http://pypi.python.org/pypi/setuptools) (PyPI) installed on your machine, the installation of AgileCLU is simple and straightfoward.  Simply execute one of the following commands (sudo is usually required on Linux):\r\n\r\n\teasy_install AgileCLU\r\n\r\nor,\r\n\r\n\tpip install AgileCLU\r\n\r\nIf the above method worked for you, you can skip the next operating system-specific installation notes and move on to Configuration, as you have now completed the installation of AgileCLU.  If not, consult the relevant operating system-specific section that follows.\r\n\r\nCommands\r\n--------\r\nThe commands that are currently available are:\r\n\r\n*agileprofile* - Generate a profile based on account credentials and ingest/egress information\r\n\r\n*agilefetch* - Automatically download a file from any URL and place it in your storage in a specified directory\r\n\r\n*agilemkdir* - Make a directory\r\n\r\n*agilerm* - Remove a file\r\n\r\n*agilels* - List a directory\r\n\r\n*agilepost* - Upload a file\r\n\r\nNOTE: For Windows, add a \".py\" extension to the above commands.\r\n\r\nInstallation:Linux\r\n------------------\r\n\r\nOn most Linux distributions, Python is already installed, you only need to install PyPI.  For Debian, Ubuntu and other distributions using APT, install PyPI with the following:\r\n\r\n\tsudo apt-get install python-pip\r\n\r\nIf you are running another distribution, consult the [Python setuptools](http://pypi.python.org/pypi/setuptools) documentation.  After you complete this step, complete Basic Installation and move on to Configuration.\r\n\r\nInstallation:Mac OSX\r\n--------------------\r\nPython is already installed by default on modern OS X.\r\n\r\nInstallation:Windows 32-bit and 64-bit\r\n--------------------------------------\r\nPython must be installed on the machine.  You can download from http://www.python.org/getit/ or, specifically, for Windows 32 and 64-bit:\r\n\r\n* Python 2.7.3 Windows Installer (Windows binary - does not include source)\r\n\t* http://www.python.org/ftp/python/2.7.3/python-2.7.3.msi\r\n\r\n* Python 2.7.3 Windows X86-64 Installer (Windows AMD64 / Intel 64 / X86-64 bainry - does not include source)\r\n\t* http://www.python.org/ftp/python/2.7.3/python-2.7.3.amd64.msi\r\n\r\nOnce Python has been installed, you will want to add setuptools, the mainstream package manager for Python, also known as PyPI.\r\n\r\nNext, set the system's PATH variable to include directories that include Python components and packages we'll add later.  To do this:\r\n\r\n* Click the bottom left Windows icon\r\n* In the search field, type 'system'\r\n* In the Control Panel section of the search results, select \"Edit system environment variables\"\r\n* Select \"Environment Variables\"\r\n* In the \"System variables\" section, scroll down to Path and click \"Edit...\", and then append \";C:\\Python27;C:\\Python27\\Lib\\site-packages;C:\\Python27\\Scripts;\" to the \"Variable Value\", then select OK.\r\n\r\n\r\n* For 32-bit version of Python \r\n\t* Install setuptools using the provided .exe installer.\r\n\t\t* http://pypi.python.org/packages/2.7/s/setuptools/setuptools-0.6c11.win32-py2.7.exe\r\n\r\n* For 64-bit versions of Python\r\n\t* Download ez_setup.py and run it; it will download the appropriate .egg file and install it for you. (Currently, the provided .exe installer does not support 64-bit versions of Python for Windows, due to a distutils installer compatibility issue.\r\n\t\t* http://peak.telecommunity.com/dist/ez_setup.py\r\n\t\t* Run \"ez_setup.py\"\r\n\r\n\r\neasy_install AgileCLU\r\n\r\nUpgrading\r\n---------\r\nIf you are upgrading from a release prior to 0.3.1, you may need to manually delete the files from your Python installation (egg and easy-install.pth) prior to invoking easy_install or pip.  For future upgrades, can force to latest version with:\r\n\r\n\teasy_install -U AgileCLU\r\n\r\n\r\nConfiguration \r\n-------------\r\nAfter installing AgileCLU, run use the profile tool to generate the proper output to place in an /etc/agile/agile.conf configuration file.  You can create as many configuration profiles as you like, specifying to use them over the default agile.conf profile by specifying the -l option on any given command.\r\n\r\n\tagileprofile\r\n\r\nExample output:\r\n\r\n\tagileprofile (AgileCLU 0.3.6)\r\n\t\r\n\tThis tool generates Agile Storage profile text to be pasted into AgileCLU profile configuration\r\n\tfiles (eg. /etc/agile/agile.conf is the default).  The information should have been provided to\r\n\tyou by Limelight Networks, often via a \"welcome letter\".  If you have questions regarding the\r\n\taccount information, please contact support@llnw.com.\r\n\t\r\n\tEnter Agile username: testcompany\r\n\tEnter Agile password: \r\n\tRe-enter Agile password: \r\n\tEnter your egress hostname: global.mt.lldns.net\r\n\tEnter your egress base path: /testcompany\r\n\tEnter your ingest hostname: api.agile.lldns.net\r\n\t\r\n\tPASTE THE FOLLOWING IN YOUR PROFILE CONFIGURATION FILE \r\n\t\r\n\t[Identity]\r\n\tusername = testcompany\r\n\tpassword = A4UsWnRpKOdNy0HNWDHY+Q==\r\n\t\r\n\t[Egress]\r\n\tprotocol = http\r\n\thostname = global.mt.lldns.net\r\n\tbasepath = /testcompany\r\n\t\r\n\t[Ingest]\r\n\tprotocol = https\r\n\thostname = api.agile.lldns.net\r\n\t\r\n\t[Logging]\r\n\tenabled = no\r\n\tlogfile = /var/log/agileclu.log\r\n\tlevel = info\r\n\r\nRequirements\r\n------------\r\nThis package has the following requirements:\r\n\r\n* An account on Limelight Network's Agile Storage cloud platform. (http://www.limelightnetworks.com)\r\n* poster by Chris AtLee - used for streaming ingest (http://atlee.ca/software/poster/)\r\n* progressbar by Nilton Volpato - used for console ingest progress bar (http://code.google.com/p/python-progressbar/)\r\n* pydes by Todd Whiteman - used as part of the password encryption scheme for config files (http://twhiteman.netfirms.com/des.html)\r\n* jsonrpclib by John Marshall - an implementation of the JSON-RPC specification (https://github.com/joshmarshall/jsonrpclib)\r\n\r\nStorage Locations\r\n-----------------\r\nAs of October 2012, the Agile Storage Cloud has storage capacity in 34 geographies around the world.\r\n\r\n![Agile Storage Locations](https://raw.github.com/wylieswanson/AgileCLU/master/agile_locations_oct_2012.jpg)\r\n","google":"","tagline":"AgileCLU - Agile Storage Command Line Utilities and development library for Limelight Networks"}